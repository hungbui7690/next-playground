/*
  Create Model
  - everytime we make changes in schema file -> we want to migrate to safely applies and tracks changes to the database structure.


*****************************

  1. prisma.schema


  ~~ npx prisma migrate dev
    -> âˆš Enter a name for the new migration: ... task model
    -> after run this, it will create a migrations folder

  ~~ npx prisma generate


*****************************

  - in a new terminal window 
  ~~ npx prisma studio
    -> launch Prisma Studio, which is a visual editor for your database. -> it will open studio in http://localhost:5555 


  - so, we have 2 terminal windows:
    1. to run nextJS
    2. to run studio


*****************************

  Prisma Model
  - The Prisma model provided is a representation of a Task entity in the context of a database schema. Here's a detailed description of each component within this model:

    -> model Task { ... }: This is the definition of the Task model. 
      + In Prisma, a model represents a table in the database. 
      + It serves as a blueprint for the records that will be stored in the corresponding table, defining the structure and behavior of the data.

    -> id String @id @default(uuid()): This line defines a field named id of type String which is marked with @id, signifying that this field is the primary key of the model. 
      + The @default(uuid()) directive indicates that the default value for this field will be a UUID (Universally Unique Identifier) generated by Prisma.

    -> content String: This line declares a field named content of type String. 
      + This field will store textual data, presumably the details or description of the task.

    -> createdAt DateTime @default(now()): This field is named createdAt and is of type DateTime. 
      + It has a default value set to the current timestamp at the time of record creation, indicated by the @default(now()) directive.

    -> completed Boolean @default(false): Lastly, the completed field is of type Boolean and is used to indicate whether the task has been completed. 
      + It defaults to false, meaning when a new task record is created, it is considered incomplete by default.


*****************************

  - In Prisma, the term "model" refers to an abstraction that maps to a table in your database. 
    -> Prisma models are defined in the Prisma schema, which is a declarative representation of your database's structure. 
    -> Each model in the Prisma schema corresponds to a table in the database, and each field within a model corresponds to a column in that table. 
    -> This schema plays a central role in Prisma's features, such as type-safe database access and migrations.


*****************************

  - @id: primary key
  - @default(now()): default value set to current timestamp
  - @default(false): default value set to false


*/
